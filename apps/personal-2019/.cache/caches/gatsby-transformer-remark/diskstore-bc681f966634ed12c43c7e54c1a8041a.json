{"expireTime":9007200894403822000,"key":"transformer-remark-markdown-html-ast-5c9a862727040fc6383e0309cdc302fc-gatsby-remark-autolink-headersgatsby-remark-imagesgatsby-remark-copy-linked-filesgatsby-remark-prismjs-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is the first part of an article on Concurrent mode in ReactJS. This section deals with the explanation of the Concurrent Mode principle at ReactJS and its practical demonstration with the ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":194,"offset":194}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":2,"column":194,"offset":194},"end":{"line":2,"column":204,"offset":204}}},{"type":"text","value":" API. The second part deals with the part of the API that works with loading components, when the user interacts with your app.","position":{"start":{"line":2,"column":204,"offset":204},"end":{"line":2,"column":331,"offset":331}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":331,"offset":331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At the React Conf 2019, the team responsible for the ReactJS library presented an experimental release of the so-called Concurrent Mode. About two weeks after that, they ","position":{"start":{"line":4,"column":1,"offset":333},"end":{"line":4,"column":171,"offset":503}}},{"type":"element","tagName":"a","properties":{"href":"https://reactjs.org/blog/2019/11/06/building-great-user-experiences-with-concurrent-mode-and-suspense.html"},"children":[{"type":"text","value":"publicized","position":{"start":{"line":4,"column":172,"offset":504},"end":{"line":4,"column":182,"offset":514}}}],"position":{"start":{"line":4,"column":171,"offset":503},"end":{"line":4,"column":291,"offset":623}}},{"type":"text","value":" the details on their blog. What's this all about? These are new APIs and practices that have one main objective, namely improving the user experience in ReACT applications. But how?","position":{"start":{"line":4,"column":291,"offset":623},"end":{"line":4,"column":473,"offset":805}}}],"position":{"start":{"line":4,"column":1,"offset":333},"end":{"line":4,"column":473,"offset":805}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The new API could accelerate the rendering of components by 30%. Or less JavaScript could be downloaded. That would improve the user experience, wouldn't it? Not necessarily. Conversely, in some cases Concurrent Mode even displays the information later than without this mode. So how can any slowdown in the retrieval of information improve the user experience? Users do not have stopwatch in hand to notice that their page has rendered 200ms faster, or that the specific component has rendered 50ms faster. Of course, it's not optimal for them to wait 5 seconds per page. But that's not a React problem, it's the architecture of the apps themselves. In fact, users use their eyes to judge a page's speed. So they see not the time to load the page in milliseconds, but the way it is loaded. They'll notice how many loading states have appeared on the page. They'll notice how many times the layout has changed. Where what box jumped because information was loaded into it. Optimizing these visual aspects will achieve the aforementioned user improvement","position":{"start":{"line":6,"column":1,"offset":807},"end":{"line":6,"column":1054,"offset":1860}}}],"position":{"start":{"line":6,"column":1,"offset":807},"end":{"line":6,"column":1054,"offset":1860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These visual aspects may not be as apparent on the latest Macbook on the 4G network. The worse the user's hardware and internet connection, the lower the quality of the user experience. As the numbers of users on mobile devices increase steadily, it is more likely that the user experience is not optimal.","position":{"start":{"line":8,"column":1,"offset":1862},"end":{"line":8,"column":306,"offset":2167}}}],"position":{"start":{"line":8,"column":1,"offset":1862},"end":{"line":8,"column":306,"offset":2167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"cpu-bound-solution","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#cpu-bound-solution","aria-label":"cpu bound solution permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"CPU-bound solution","position":{"start":{"line":10,"column":4,"offset":2172},"end":{"line":10,"column":22,"offset":2190}}}],"position":{"start":{"line":10,"column":1,"offset":2169},"end":{"line":10,"column":22,"offset":2190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first part ReactJS is trying to optimize is creating a DOM node and working with components. Currently, ReactJS renders components in a way that blocks their interruption. That's turning in concurrent mode. If the component starts to render, it can be interrupted and something else that has a higher priority can start updating. After that, React returns to the interrupted rendering and completes the rendering. Concurrent mode thus reduces the need to use the debounce technique, which, while acting as an optimisation solution, is not optimal from a user point of view.","position":{"start":{"line":12,"column":1,"offset":2192},"end":{"line":12,"column":578,"offset":2769}}}],"position":{"start":{"line":12,"column":1,"offset":2192},"end":{"line":12,"column":578,"offset":2769}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"solution-tied-to-adding-information","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#solution-tied-to-adding-information","aria-label":"solution tied to adding information permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Solution tied to adding information","position":{"start":{"line":14,"column":4,"offset":2774},"end":{"line":14,"column":39,"offset":2809}}}],"position":{"start":{"line":14,"column":1,"offset":2771},"end":{"line":14,"column":39,"offset":2809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The second part of Concurrent mode focuses on any async loading of information. This may be data from API, images, scripts, etc. Simplified, React will begin rendering in memory before the network data itself arrives. One can argue a situation in which we need to respond to a change in props, or a request is dependent on props. In principle, request calls should depend on event handlers. Translated into React speech, we should call a request in the parent component in the event handler. This will ensure that the rendering of the subcomponent and the API request begin to be done in parallel.","position":{"start":{"line":16,"column":1,"offset":2811},"end":{"line":16,"column":598,"offset":3408}}}],"position":{"start":{"line":16,"column":1,"offset":2811},"end":{"line":16,"column":598,"offset":3408}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">,</span> setData<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">.</span>defeaultData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> handleOnClick <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>url <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>props<span class=\"token punctuation\">.</span>defaultData<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleOnClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n        Load data\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Site</span></span> <span class=\"token attr-name\">resource</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>data<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":18,"column":1,"offset":3410},"end":{"line":33,"column":4,"offset":3748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To improve the user experience, new APIs are added to set the order of loading individual components and how they are loaded.","position":{"start":{"line":35,"column":1,"offset":3750},"end":{"line":35,"column":126,"offset":3875}}}],"position":{"start":{"line":35,"column":1,"offset":3750},"end":{"line":35,"column":126,"offset":3875}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"turning-concurrent-mode-on","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#turning-concurrent-mode-on","aria-label":"turning concurrent mode on permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Turning Concurrent mode on","position":{"start":{"line":37,"column":4,"offset":3880},"end":{"line":37,"column":30,"offset":3906}}}],"position":{"start":{"line":37,"column":1,"offset":3877},"end":{"line":37,"column":30,"offset":3906}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To turn Concurrent mode on in the app, the API changes when React is initialized into a DOM element. Using API ","position":{"start":{"line":39,"column":1,"offset":3908},"end":{"line":39,"column":112,"offset":4019}}},{"type":"raw","value":"<code class=\"language-text\">createRoot</code>","position":{"start":{"line":39,"column":112,"offset":4019},"end":{"line":39,"column":124,"offset":4031}}},{"type":"text","value":" you can simply turn on Concurrent mode. As Concurrent mode has semantic changes, API ","position":{"start":{"line":39,"column":124,"offset":4031},"end":{"line":39,"column":210,"offset":4117}}},{"type":"raw","value":"<code class=\"language-text\">createBlockingRoot</code>","position":{"start":{"line":39,"column":210,"offset":4117},"end":{"line":39,"column":230,"offset":4137}}},{"type":"text","value":" has also been added to serve as an intermediate step in converting a complex application to Concurrent mode.","position":{"start":{"line":39,"column":230,"offset":4137},"end":{"line":39,"column":339,"offset":4246}}}],"position":{"start":{"line":39,"column":1,"offset":3908},"end":{"line":39,"column":339,"offset":4246}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In news app can be used:","position":{"start":{"line":41,"column":1,"offset":4248},"end":{"line":41,"column":25,"offset":4272}}}],"position":{"start":{"line":41,"column":1,"offset":4248},"end":{"line":41,"column":25,"offset":4272}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">createRoot</span><span class=\"token punctuation\">(</span>rootNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":43,"column":1,"offset":4274},"end":{"line":45,"column":4,"offset":4330}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"instead of","position":{"start":{"line":47,"column":1,"offset":4332},"end":{"line":47,"column":11,"offset":4342}}}],"position":{"start":{"line":47,"column":1,"offset":4332},"end":{"line":47,"column":11,"offset":4342}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">ReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> rootNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":49,"column":1,"offset":4344},"end":{"line":51,"column":4,"offset":4389}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"suspense-api","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#suspense-api","aria-label":"suspense api permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Suspense API","position":{"start":{"line":53,"column":4,"offset":4394},"end":{"line":53,"column":16,"offset":4406}}}],"position":{"start":{"line":53,"column":1,"offset":4391},"end":{"line":53,"column":16,"offset":4406}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"suspense","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#suspense","aria-label":"suspense permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Suspense","position":{"start":{"line":55,"column":5,"offset":4412},"end":{"line":55,"column":13,"offset":4420}}}],"position":{"start":{"line":55,"column":1,"offset":4408},"end":{"line":55,"column":13,"offset":4420}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first API you use to optimize data retrieval is ","position":{"start":{"line":57,"column":1,"offset":4422},"end":{"line":57,"column":53,"offset":4474}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":57,"column":53,"offset":4474},"end":{"line":57,"column":63,"offset":4484}}},{"type":"text","value":". The Suspense will wait to render the component to retrieve the data. In the meantime, it will display a fallback. Fallback can be anything renderable, i.e. string, number or component. Fallback is sent as prop ","position":{"start":{"line":57,"column":63,"offset":4484},"end":{"line":57,"column":275,"offset":4696}}},{"type":"raw","value":"<code class=\"language-text\">fallback</code>","position":{"start":{"line":57,"column":275,"offset":4696},"end":{"line":57,"column":285,"offset":4706}}},{"type":"text","value":" u ","position":{"start":{"line":57,"column":285,"offset":4706},"end":{"line":57,"column":288,"offset":4709}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":57,"column":288,"offset":4709},"end":{"line":57,"column":298,"offset":4719}}},{"type":"text","value":".","position":{"start":{"line":57,"column":298,"offset":4719},"end":{"line":57,"column":299,"offset":4720}}}],"position":{"start":{"line":57,"column":1,"offset":4422},"end":{"line":57,"column":299,"offset":4720}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Loading..<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":59,"column":1,"offset":4722},"end":{"line":63,"column":4,"offset":4790}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"suspenselist","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#suspenselist","aria-label":"suspenselist permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"SuspenseList","position":{"start":{"line":65,"column":5,"offset":4796},"end":{"line":65,"column":17,"offset":4808}}}],"position":{"start":{"line":65,"column":1,"offset":4792},"end":{"line":65,"column":17,"offset":4808}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">SuspenseList</code>","position":{"start":{"line":67,"column":1,"offset":4810},"end":{"line":67,"column":15,"offset":4824}}},{"type":"text","value":" is a warpper component that acts as a control center. So it controls what subcomponent Suspense is rendered in what order. Without using ","position":{"start":{"line":67,"column":15,"offset":4824},"end":{"line":67,"column":153,"offset":4962}}},{"type":"raw","value":"<code class=\"language-text\">SuspenseList</code>","position":{"start":{"line":67,"column":153,"offset":4962},"end":{"line":67,"column":167,"offset":4976}}},{"type":"text","value":", individual ","position":{"start":{"line":67,"column":167,"offset":4976},"end":{"line":67,"column":180,"offset":4989}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":67,"column":180,"offset":4989},"end":{"line":67,"column":190,"offset":4999}}},{"type":"text","value":" renders themselves independent of the others and their order in the JSX.","position":{"start":{"line":67,"column":190,"offset":4999},"end":{"line":67,"column":263,"offset":5072}}}],"position":{"start":{"line":67,"column":1,"offset":4810},"end":{"line":67,"column":263,"offset":5072}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"SuspenseList has two props. The first is ","position":{"start":{"line":69,"column":1,"offset":5074},"end":{"line":69,"column":42,"offset":5115}}},{"type":"raw","value":"<code class=\"language-text\">revealOrder</code>","position":{"start":{"line":69,"column":42,"offset":5115},"end":{"line":69,"column":55,"offset":5128}}},{"type":"text","value":", which determines in what order the ","position":{"start":{"line":69,"column":55,"offset":5128},"end":{"line":69,"column":92,"offset":5165}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":69,"column":92,"offset":5165},"end":{"line":69,"column":102,"offset":5175}}},{"type":"text","value":" is rendered. It can render from the start (forwards), from the end (backwards) or all at once (together). The second is ","position":{"start":{"line":69,"column":102,"offset":5175},"end":{"line":69,"column":223,"offset":5296}}},{"type":"raw","value":"<code class=\"language-text\">tail</code>","position":{"start":{"line":69,"column":223,"offset":5296},"end":{"line":69,"column":229,"offset":5302}}},{"type":"text","value":", by which we tell how to display fallbacks in individual ","position":{"start":{"line":69,"column":229,"offset":5302},"end":{"line":69,"column":287,"offset":5360}}},{"type":"raw","value":"<code class=\"language-text\">Suspenses</code>","position":{"start":{"line":69,"column":287,"offset":5360},"end":{"line":69,"column":298,"offset":5371}}},{"type":"text","value":". Default ","position":{"start":{"line":69,"column":298,"offset":5371},"end":{"line":69,"column":308,"offset":5381}}},{"type":"raw","value":"<code class=\"language-text\">SuspenseList</code>","position":{"start":{"line":69,"column":308,"offset":5381},"end":{"line":69,"column":322,"offset":5395}}},{"type":"text","value":" displays all fallbacks. S ","position":{"start":{"line":69,"column":322,"offset":5395},"end":{"line":69,"column":349,"offset":5422}}},{"type":"raw","value":"<code class=\"language-text\">tail=collapsed</code>","position":{"start":{"line":69,"column":349,"offset":5422},"end":{"line":69,"column":365,"offset":5438}}},{"type":"text","value":" will show only another fallback in order. S ","position":{"start":{"line":69,"column":365,"offset":5438},"end":{"line":69,"column":410,"offset":5483}}},{"type":"raw","value":"<code class=\"language-text\">tail=hidden</code>","position":{"start":{"line":69,"column":410,"offset":5483},"end":{"line":69,"column":423,"offset":5496}}},{"type":"text","value":" shows no fallback. The ","position":{"start":{"line":69,"column":423,"offset":5496},"end":{"line":69,"column":447,"offset":5520}}},{"type":"raw","value":"<code class=\"language-text\">SuspenseList</code>","position":{"start":{"line":69,"column":447,"offset":5520},"end":{"line":69,"column":461,"offset":5534}}},{"type":"text","value":" works with only one ","position":{"start":{"line":69,"column":461,"offset":5534},"end":{"line":69,"column":482,"offset":5555}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":69,"column":482,"offset":5555},"end":{"line":69,"column":492,"offset":5565}}},{"type":"text","value":" nested, but there's no problem using the nested ","position":{"start":{"line":69,"column":492,"offset":5565},"end":{"line":69,"column":541,"offset":5614}}},{"type":"raw","value":"<code class=\"language-text\">SuspenseList</code>","position":{"start":{"line":69,"column":541,"offset":5614},"end":{"line":69,"column":555,"offset":5628}}},{"type":"text","value":" in itself.","position":{"start":{"line":69,"column":555,"offset":5628},"end":{"line":69,"column":566,"offset":5639}}}],"position":{"start":{"line":69,"column":1,"offset":5074},"end":{"line":69,"column":566,"offset":5639}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SuspenseList</span></span> <span class=\"token attr-name\">revealOrder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>forwards<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Content</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>loading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SideBar</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SuspenseList</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":71,"column":1,"offset":5641},"end":{"line":80,"column":4,"offset":5829}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"demo","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#demo","aria-label":"demo permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Demo","position":{"start":{"line":82,"column":4,"offset":5834},"end":{"line":82,"column":8,"offset":5838}}}],"position":{"start":{"line":82,"column":1,"offset":5831},"end":{"line":82,"column":8,"offset":5838}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For the demo on the API suspension, I've chosen Twitter. Loading states and loaded content are gradually drawn when the browser version is loaded. I have no idea if Twitter wants to do something about it or I'm missing something, but it doesn't suit me personally. So I would like to create an app similar to the (structure) of Twitter. Since Twitter does not allow requests to their API directly from the front-end, I chose newsapi.org as a data source. If you want to try a demo, get a free key on their site. The app is created using ","position":{"start":{"line":84,"column":1,"offset":5840},"end":{"line":84,"column":538,"offset":6377}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/facebook/create-react-app"},"children":[{"type":"text","value":"create-react-app","position":{"start":{"line":84,"column":539,"offset":6378},"end":{"line":84,"column":555,"offset":6394}}}],"position":{"start":{"line":84,"column":538,"offset":6377},"end":{"line":84,"column":602,"offset":6441}}},{"type":"text","value":".","position":{"start":{"line":84,"column":602,"offset":6441},"end":{"line":84,"column":603,"offset":6442}}}],"position":{"start":{"line":84,"column":1,"offset":5840},"end":{"line":84,"column":603,"offset":6442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/src/images/7c0ab2dd736a993d9e93bd691f78423e/twitter-original.gif","alt":"Twitter and his way of loading data (animation)"},"children":[],"position":{"start":{"line":86,"column":1,"offset":6444},"end":{"line":86,"column":88,"offset":6531}}}],"position":{"start":{"line":86,"column":1,"offset":6444},"end":{"line":86,"column":88,"offset":6531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In animation, you see the gradual loading of individual parts and their resize after everything has been loaded.\nNow, look how the demo app with ","position":{"start":{"line":88,"column":1,"offset":6533},"end":{"line":89,"column":33,"offset":6678}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":89,"column":33,"offset":6678},"end":{"line":89,"column":43,"offset":6688}}},{"type":"text","value":" is loaded.","position":{"start":{"line":89,"column":43,"offset":6688},"end":{"line":89,"column":54,"offset":6699}}}],"position":{"start":{"line":88,"column":1,"offset":6533},"end":{"line":89,"column":54,"offset":6699}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/src/images/b301f04d74bc996ad1fa013a349bb381/twitter-with-suspense.gif","alt":"Way of loading with React Suspense"},"children":[],"position":{"start":{"line":91,"column":1,"offset":6701},"end":{"line":91,"column":80,"offset":6780}}}],"position":{"start":{"line":91,"column":1,"offset":6701},"end":{"line":91,"column":80,"offset":6780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can see that the content appears at once after all the data is loaded. It's more user-friendly.\nHow to accomplish that? I created 4 blocks. The first is the application as such, which is responsible for the layout of individual subcomponents. The app already contains a static left column.\nAfterwards I've added 3 components:","position":{"start":{"line":93,"column":1,"offset":6782},"end":{"line":95,"column":36,"offset":7110}}}],"position":{"start":{"line":93,"column":1,"offset":6782},"end":{"line":95,"column":36,"offset":7110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Feed","position":{"start":{"line":97,"column":3,"offset":7114},"end":{"line":97,"column":7,"offset":7118}}}],"position":{"start":{"line":97,"column":1,"offset":7112},"end":{"line":97,"column":7,"offset":7118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"TrendsForYour","position":{"start":{"line":98,"column":3,"offset":7121},"end":{"line":98,"column":16,"offset":7134}}}],"position":{"start":{"line":98,"column":1,"offset":7119},"end":{"line":98,"column":16,"offset":7134}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"WhoToFollow","position":{"start":{"line":99,"column":3,"offset":7137},"end":{"line":99,"column":14,"offset":7148}}}],"position":{"start":{"line":99,"column":1,"offset":7135},"end":{"line":99,"column":14,"offset":7148}}},{"type":"text","value":"\n"}],"position":{"start":{"line":97,"column":1,"offset":7112},"end":{"line":99,"column":14,"offset":7148}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These components copy content on Twitter. Each of these three components fetches data from the API. Each fetch is packed with a ","position":{"start":{"line":101,"column":1,"offset":7150},"end":{"line":101,"column":129,"offset":7278}}},{"type":"raw","value":"<code class=\"language-text\">wrapPromise</code>","position":{"start":{"line":101,"column":129,"offset":7278},"end":{"line":101,"column":142,"offset":7291}}},{"type":"text","value":" that starts downloading data before the first rendering.","position":{"start":{"line":101,"column":142,"offset":7291},"end":{"line":101,"column":199,"offset":7348}}}],"position":{"start":{"line":101,"column":1,"offset":7150},"end":{"line":101,"column":199,"offset":7348}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// wrapPromise.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">wrapPromise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">promise</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> status <span class=\"token operator\">=</span> <span class=\"token string\">\"pending\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> suspender <span class=\"token operator\">=</span> <span class=\"token function\">promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      status <span class=\"token operator\">=</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">;</span>\n      result <span class=\"token operator\">=</span> response<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      status <span class=\"token operator\">=</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">;</span>\n      result <span class=\"token operator\">=</span> error<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"pending\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> suspender<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> result<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">===</span> <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":103,"column":1,"offset":7350},"end":{"line":130,"column":4,"offset":7877}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We call this promise wrapper and the we call ","position":{"start":{"line":132,"column":1,"offset":7879},"end":{"line":132,"column":46,"offset":7924}}},{"type":"raw","value":"<code class=\"language-text\">read</code>","position":{"start":{"line":132,"column":46,"offset":7924},"end":{"line":132,"column":52,"offset":7930}}},{"type":"text","value":" method in the component.","position":{"start":{"line":132,"column":52,"offset":7930},"end":{"line":132,"column":77,"offset":7955}}}],"position":{"start":{"line":132,"column":1,"offset":7879},"end":{"line":132,"column":77,"offset":7955}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// Feed.jsx</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">fetchFeed</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetchWithKey</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">r</span> <span class=\"token operator\">=></span> r<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> resource <span class=\"token operator\">=</span> <span class=\"token function\">wrapPromise</span><span class=\"token punctuation\">(</span>fetchFeed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// call fetch in wrapPromise</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Feed</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> feed <span class=\"token operator\">=</span> resource<span class=\"token punctuation\">.</span><span class=\"token function\">read</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// read resource</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Feed<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n\t        ...\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":134,"column":1,"offset":7957},"end":{"line":150,"column":4,"offset":8295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We now have the component ","position":{"start":{"line":152,"column":1,"offset":8297},"end":{"line":152,"column":27,"offset":8323}}},{"type":"raw","value":"<code class=\"language-text\">Feed</code>","position":{"start":{"line":152,"column":27,"offset":8323},"end":{"line":152,"column":33,"offset":8329}}},{"type":"text","value":" ready for Concurrent mode and all we have to do is add the ","position":{"start":{"line":152,"column":33,"offset":8329},"end":{"line":152,"column":93,"offset":8389}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":152,"column":93,"offset":8389},"end":{"line":152,"column":103,"offset":8399}}},{"type":"text","value":" because of the loading behavior. In ","position":{"start":{"line":152,"column":103,"offset":8399},"end":{"line":152,"column":140,"offset":8436}}},{"type":"raw","value":"<code class=\"language-text\">App</code>","position":{"start":{"line":152,"column":140,"offset":8436},"end":{"line":152,"column":145,"offset":8441}}},{"type":"text","value":", using lazy- loading, we import ","position":{"start":{"line":152,"column":145,"offset":8441},"end":{"line":152,"column":178,"offset":8474}}},{"type":"raw","value":"<code class=\"language-text\">Feed</code>","position":{"start":{"line":152,"column":178,"offset":8474},"end":{"line":152,"column":184,"offset":8480}}},{"type":"text","value":" since the Twitter feed is certainly not one simple component, we will add a ","position":{"start":{"line":152,"column":184,"offset":8480},"end":{"line":152,"column":261,"offset":8557}}},{"type":"raw","value":"<code class=\"language-text\">delay</code>","position":{"start":{"line":152,"column":261,"offset":8557},"end":{"line":152,"column":268,"offset":8564}}},{"type":"text","value":" to simulate a larger JS bundle and thus a longer load.","position":{"start":{"line":152,"column":268,"offset":8564},"end":{"line":152,"column":323,"offset":8619}}}],"position":{"start":{"line":152,"column":1,"offset":8297},"end":{"line":152,"column":323,"offset":8619}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// App.js</span>\n<span class=\"token keyword\">const</span> Feed <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">lazy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./components/Feed\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token function\">delay</span><span class=\"token punctuation\">(</span><span class=\"token number\">2500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":154,"column":1,"offset":8621},"end":{"line":157,"column":4,"offset":8718}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we can add ","position":{"start":{"line":159,"column":1,"offset":8720},"end":{"line":159,"column":16,"offset":8735}}},{"type":"raw","value":"<code class=\"language-text\">Feed</code>","position":{"start":{"line":159,"column":16,"offset":8735},"end":{"line":159,"column":22,"offset":8741}}},{"type":"text","value":" together with ","position":{"start":{"line":159,"column":22,"offset":8741},"end":{"line":159,"column":37,"offset":8756}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":159,"column":37,"offset":8756},"end":{"line":159,"column":47,"offset":8766}}},{"type":"text","value":" in to our app.","position":{"start":{"line":159,"column":47,"offset":8766},"end":{"line":159,"column":62,"offset":8781}}}],"position":{"start":{"line":159,"column":1,"offset":8720},"end":{"line":159,"column":62,"offset":8781}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feed</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":161,"column":1,"offset":8783},"end":{"line":169,"column":4,"offset":8900}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First component is done. Now, it's time to add remaining two components in the same way. Add ","position":{"start":{"line":171,"column":1,"offset":8902},"end":{"line":171,"column":94,"offset":8995}}},{"type":"raw","value":"<code class=\"language-text\">TrendsForYou</code>","position":{"start":{"line":171,"column":94,"offset":8995},"end":{"line":171,"column":108,"offset":9009}}},{"type":"text","value":" and ","position":{"start":{"line":171,"column":108,"offset":9009},"end":{"line":171,"column":113,"offset":9014}}},{"type":"raw","value":"<code class=\"language-text\">WhoToFollow</code>","position":{"start":{"line":171,"column":113,"offset":9014},"end":{"line":171,"column":126,"offset":9027}}},{"type":"text","value":". We'll also add base HTML structure and some CSS.","position":{"start":{"line":171,"column":126,"offset":9027},"end":{"line":171,"column":176,"offset":9077}}}],"position":{"start":{"line":171,"column":1,"offset":8902},"end":{"line":171,"column":176,"offset":9077}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// App.jsx return</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column Column--middle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feed</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column Column--right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span>\n      <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TrendsForYou TrendsForYou--loading<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrendsForYou</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span>\n      <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>WhoToFollow WhoToFollow--loading<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WhoToFollow</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":173,"column":1,"offset":9079},"end":{"line":194,"column":4,"offset":9548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we try to run such a code using ","position":{"start":{"line":196,"column":1,"offset":9550},"end":{"line":196,"column":36,"offset":9585}}},{"type":"raw","value":"<code class=\"language-text\">yarn start</code>","position":{"start":{"line":196,"column":36,"offset":9585},"end":{"line":196,"column":48,"offset":9597}}},{"type":"text","value":" or ","position":{"start":{"line":196,"column":48,"offset":9597},"end":{"line":196,"column":52,"offset":9601}}},{"type":"raw","value":"<code class=\"language-text\">npm start</code>","position":{"start":{"line":196,"column":52,"offset":9601},"end":{"line":196,"column":63,"offset":9612}}},{"type":"text","value":" we'll see about the same behavior as existing Twitter. Individual components, depending on the length of ","position":{"start":{"line":196,"column":63,"offset":9612},"end":{"line":196,"column":169,"offset":9718}}},{"type":"raw","value":"<code class=\"language-text\">delay</code>","position":{"start":{"line":196,"column":169,"offset":9718},"end":{"line":196,"column":176,"offset":9725}}},{"type":"text","value":" and time at fetch, are loaded in \"random\" order. To steer this order, we add the ","position":{"start":{"line":196,"column":176,"offset":9725},"end":{"line":196,"column":258,"offset":9807}}},{"type":"raw","value":"<code class=\"language-text\">SuspenseList</code>","position":{"start":{"line":196,"column":258,"offset":9807},"end":{"line":196,"column":272,"offset":9821}}},{"type":"text","value":" with prop ","position":{"start":{"line":196,"column":272,"offset":9821},"end":{"line":196,"column":283,"offset":9832}}},{"type":"raw","value":"<code class=\"language-text\">revealOrder</code>","position":{"start":{"line":196,"column":283,"offset":9832},"end":{"line":196,"column":296,"offset":9845}}},{"type":"text","value":" instead of the React Fragment. The resulting JSX in ","position":{"start":{"line":196,"column":296,"offset":9845},"end":{"line":196,"column":349,"offset":9898}}},{"type":"raw","value":"<code class=\"language-text\">App</code>","position":{"start":{"line":196,"column":349,"offset":9898},"end":{"line":196,"column":354,"offset":9903}}},{"type":"text","value":" will look like this.","position":{"start":{"line":196,"column":354,"offset":9903},"end":{"line":196,"column":375,"offset":9924}}}],"position":{"start":{"line":196,"column":1,"offset":9550},"end":{"line":196,"column":375,"offset":9924}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// App.jsx return</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SuspenseList</span></span> <span class=\"token attr-name\">revealOrder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>together<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column Column--middle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span> <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Feed</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Column Column--right<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span>\n      <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>TrendsForYou TrendsForYou--loading<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TrendsForYou</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Suspense</span></span>\n      <span class=\"token attr-name\">fallback</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Loader</span></span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>WhoToFollow WhoToFollow--loading<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WhoToFollow</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Suspense</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SuspenseList</span></span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":198,"column":1,"offset":9926},"end":{"line":219,"column":4,"offset":10442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now all components should be loaded at the same time. It is possible that, for example, ","position":{"start":{"line":221,"column":1,"offset":10444},"end":{"line":221,"column":89,"offset":10532}}},{"type":"raw","value":"<code class=\"language-text\">TrendsForYou</code>","position":{"start":{"line":221,"column":89,"offset":10532},"end":{"line":221,"column":103,"offset":10546}}},{"type":"text","value":" will load earlier, but wait for the other ","position":{"start":{"line":221,"column":103,"offset":10546},"end":{"line":221,"column":146,"offset":10589}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":221,"column":146,"offset":10589},"end":{"line":221,"column":156,"offset":10599}}},{"type":"text","value":" and then display itself. This is simple enough to work with the ","position":{"start":{"line":221,"column":156,"offset":10599},"end":{"line":221,"column":221,"offset":10664}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":221,"column":221,"offset":10664},"end":{"line":221,"column":231,"offset":10674}}},{"type":"text","value":" in ReactJS. In the ","position":{"start":{"line":221,"column":231,"offset":10674},"end":{"line":221,"column":251,"offset":10694}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/michalhonc/Twitter-with-suspense"},"children":[{"type":"text","value":"repository","position":{"start":{"line":221,"column":252,"offset":10695},"end":{"line":221,"column":262,"offset":10705}}}],"position":{"start":{"line":221,"column":251,"offset":10694},"end":{"line":221,"column":316,"offset":10759}}},{"type":"text","value":", I also added several other loading variations. In the production, I can imagine that the highest priority loading will be ","position":{"start":{"line":221,"column":316,"offset":10759},"end":{"line":221,"column":440,"offset":10883}}},{"type":"raw","value":"<code class=\"language-text\">Feed</code>","position":{"start":{"line":221,"column":440,"offset":10883},"end":{"line":221,"column":446,"offset":10889}}},{"type":"text","value":" as the most important element on Twitters page.","position":{"start":{"line":221,"column":446,"offset":10889},"end":{"line":221,"column":494,"offset":10937}}}],"position":{"start":{"line":221,"column":1,"offset":10444},"end":{"line":221,"column":494,"offset":10937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The entire app is in a repository on ","position":{"start":{"line":223,"column":1,"offset":10939},"end":{"line":223,"column":38,"offset":10976}}},{"type":"element","tagName":"a","properties":{"href":"https://github.com/michalhonc/Twitter-with-suspense"},"children":[{"type":"text","value":"Github","position":{"start":{"line":223,"column":39,"offset":10977},"end":{"line":223,"column":45,"offset":10983}}}],"position":{"start":{"line":223,"column":38,"offset":10976},"end":{"line":223,"column":99,"offset":11037}}},{"type":"text","value":".","position":{"start":{"line":223,"column":99,"offset":11037},"end":{"line":223,"column":100,"offset":11038}}}],"position":{"start":{"line":223,"column":1,"offset":10939},"end":{"line":223,"column":100,"offset":11038}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"summary","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#summary","aria-label":"summary permalink","class":"Blog-share before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Summary","position":{"start":{"line":225,"column":4,"offset":11043},"end":{"line":225,"column":11,"offset":11050}}}],"position":{"start":{"line":225,"column":1,"offset":11040},"end":{"line":225,"column":11,"offset":11050}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The first part of the article on React Suspense addressed the explanation of the Concurrent Mode principle and the application of the ","position":{"start":{"line":227,"column":1,"offset":11052},"end":{"line":227,"column":135,"offset":11186}}},{"type":"raw","value":"<code class=\"language-text\">Suspense</code>","position":{"start":{"line":227,"column":135,"offset":11186},"end":{"line":227,"column":145,"offset":11196}}},{"type":"text","value":" API in practice. In the next part, we look at the API ","position":{"start":{"line":227,"column":145,"offset":11196},"end":{"line":227,"column":200,"offset":11251}}},{"type":"raw","value":"<code class=\"language-text\">useTransition</code>","position":{"start":{"line":227,"column":200,"offset":11251},"end":{"line":227,"column":215,"offset":11266}}},{"type":"text","value":" and ","position":{"start":{"line":227,"column":215,"offset":11266},"end":{"line":227,"column":220,"offset":11271}}},{"type":"raw","value":"<code class=\"language-text\">useDeferredValue</code>","position":{"start":{"line":227,"column":220,"offset":11271},"end":{"line":227,"column":238,"offset":11289}}},{"type":"text","value":", which work with loading states during user interaction. We'll show how a given API can be applied in a real application.","position":{"start":{"line":227,"column":238,"offset":11289},"end":{"line":227,"column":360,"offset":11411}}}],"position":{"start":{"line":227,"column":1,"offset":11052},"end":{"line":227,"column":360,"offset":11411}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":228,"column":1,"offset":11412}}}}